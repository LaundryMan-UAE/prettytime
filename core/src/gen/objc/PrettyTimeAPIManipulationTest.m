//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/marcussmith/HambroPerks/myforks/prettytime/core/src/test/java/org/ocpsoft/prettytime/PrettyTimeAPIManipulationTest.java
//

#include "Duration.h"
#include "IOSClass.h"
#include "JustNow.h"
#include "PrettyTime.h"
#include "PrettyTimeAPIManipulationTest.h"
#include "TimeFormat.h"
#include "TimeUnit.h"
#include "java/lang/Exception.h"
#include "java/lang/IllegalArgumentException.h"
#include "java/util/Date.h"
#include "java/util/List.h"
#include "java/util/Locale.h"
#include "org/junit/Assert.h"
#include "org/junit/Test.h"

@implementation OrgOcpsoftPrettytimePrettyTimeAPIManipulationTest

- (void)testApiMisuse1 {
  (void) [((OrgOcpsoftPrettytimePrettyTime *) nil_chk(t_)) approximateDurationWithJavaUtilDate:nil];
}

- (void)testApiMisuse2 {
  (void) [((OrgOcpsoftPrettytimePrettyTime *) nil_chk(t_)) calculatePreciseDurationWithJavaUtilDate:nil];
}

- (void)testApiMisuse3 {
  (void) [((OrgOcpsoftPrettytimePrettyTime *) nil_chk(t_)) clearUnits];
}

- (void)testApiMisuse4 {
  (void) [((OrgOcpsoftPrettytimePrettyTime *) nil_chk(t_)) formatWithJavaUtilDate:date_];
}

- (void)testApiMisuse5 {
  (void) [((OrgOcpsoftPrettytimePrettyTime *) nil_chk(t_)) formatWithOrgOcpsoftPrettytimeDuration:duration_];
}

- (void)testApiMisuse6 {
  (void) [((OrgOcpsoftPrettytimePrettyTime *) nil_chk(t_)) formatWithJavaUtilList:list_];
}

- (void)testApiMisuse7 {
  (void) [((OrgOcpsoftPrettytimePrettyTime *) nil_chk(t_)) formatUnroundedWithJavaUtilDate:date_];
}

- (void)testApiMisuse8 {
  (void) [((OrgOcpsoftPrettytimePrettyTime *) nil_chk(t_)) formatUnroundedWithOrgOcpsoftPrettytimeDuration:duration_];
}

- (void)testApiMisuse9 {
  (void) [((OrgOcpsoftPrettytimePrettyTime *) nil_chk(t_)) getFormatWithOrgOcpsoftPrettytimeTimeUnit:nil];
}

- (void)testApiMisuse10 {
  (void) [((OrgOcpsoftPrettytimePrettyTime *) nil_chk(t_)) getLocale];
}

- (void)testApiMisuse11 {
  (void) [((OrgOcpsoftPrettytimePrettyTime *) nil_chk(t_)) getReference];
}

- (void)testApiMisuse12 {
  (void) [((OrgOcpsoftPrettytimePrettyTime *) nil_chk(t_)) getUnits];
}

- (void)testApiMisuse13 {
  (void) [((OrgOcpsoftPrettytimePrettyTime *) nil_chk(t_)) registerUnitWithOrgOcpsoftPrettytimeTimeUnit:nil withOrgOcpsoftPrettytimeTimeFormat:nil];
}

- (void)testApiMisuse15 {
  (void) [((OrgOcpsoftPrettytimePrettyTime *) nil_chk(t_)) description];
}

- (void)testApiMisuse16 {
  (void) [((OrgOcpsoftPrettytimePrettyTime *) nil_chk(t_)) removeUnitWithIOSClass:(IOSClass *) check_class_cast(nil, [IOSClass class])];
}

- (void)testApiMisuse17 {
  (void) [((OrgOcpsoftPrettytimePrettyTime *) nil_chk(t_)) removeUnitWithOrgOcpsoftPrettytimeTimeUnit:(id<OrgOcpsoftPrettytimeTimeUnit>) check_protocol_cast(nil, @protocol(OrgOcpsoftPrettytimeTimeUnit))];
}

- (void)testApiMisuse18 {
  (void) [((OrgOcpsoftPrettytimePrettyTime *) nil_chk(t_)) getUnitWithIOSClass:nil];
}

- (void)testApiMisuse19 {
  (void) [((OrgOcpsoftPrettytimePrettyTime *) nil_chk(t_)) getUnitWithIOSClass:(IOSClass *) check_class_cast(nil, [IOSClass class])];
}

- (void)testGetUnit {
  OrgOcpsoftPrettytimeUnitsJustNow *unit = [((OrgOcpsoftPrettytimePrettyTime *) nil_chk(t_)) getUnitWithIOSClass:[IOSClass classWithClass:[OrgOcpsoftPrettytimeUnitsJustNow class]]];
  [OrgJunitAssert assertNotNullWithId:unit];
}

- (void)testChangeUnit {
  OrgOcpsoftPrettytimeUnitsJustNow *unit = [((OrgOcpsoftPrettytimePrettyTime *) nil_chk(t_)) getUnitWithIOSClass:[IOSClass classWithClass:[OrgOcpsoftPrettytimeUnitsJustNow class]]];
  [OrgJunitAssert assertEqualsWithLong:1000LL * 60LL * 5LL withLong:[((OrgOcpsoftPrettytimeUnitsJustNow *) nil_chk(unit)) getMaxQuantity]];
  [unit setMaxQuantityWithLong:1];
  [OrgJunitAssert assertEqualsWithLong:1 withLong:[((OrgOcpsoftPrettytimeUnitsJustNow *) nil_chk([t_ getUnitWithIOSClass:[IOSClass classWithClass:[OrgOcpsoftPrettytimeUnitsJustNow class]]])) getMaxQuantity]];
}

- (instancetype)init {
  if (self = [super init]) {
    date_ = nil;
    duration_ = nil;
    list_ = nil;
    t_ = [[OrgOcpsoftPrettytimePrettyTime alloc] init];
  }
  return self;
}

- (void)copyAllFieldsTo:(OrgOcpsoftPrettytimePrettyTimeAPIManipulationTest *)other {
  [super copyAllFieldsTo:other];
  other->date_ = date_;
  other->duration_ = duration_;
  other->list_ = list_;
  other->t_ = t_;
}
+ (IOSObjectArray *)__annotations_testApiMisuse1 {
  return [IOSObjectArray arrayWithObjects:(id[]) { [[OrgJunitTest alloc] initWithExpected:[[JavaLangIllegalArgumentException class] getClass] withTimeout:0] } count:1 type:[IOSClass classWithProtocol:@protocol(JavaLangAnnotationAnnotation)]];
}

+ (IOSObjectArray *)__annotations_testApiMisuse2 {
  return [IOSObjectArray arrayWithObjects:(id[]) { [[OrgJunitTest alloc] initWithExpected:[[JavaLangIllegalArgumentException class] getClass] withTimeout:0] } count:1 type:[IOSClass classWithProtocol:@protocol(JavaLangAnnotationAnnotation)]];
}

+ (IOSObjectArray *)__annotations_testApiMisuse3 {
  return [IOSObjectArray arrayWithObjects:(id[]) { [[OrgJunitTest alloc] initWithExpected:[[OrgJunitTest_None class] getClass] withTimeout:0] } count:1 type:[IOSClass classWithProtocol:@protocol(JavaLangAnnotationAnnotation)]];
}

+ (IOSObjectArray *)__annotations_testApiMisuse4 {
  return [IOSObjectArray arrayWithObjects:(id[]) { [[OrgJunitTest alloc] initWithExpected:[[JavaLangIllegalArgumentException class] getClass] withTimeout:0] } count:1 type:[IOSClass classWithProtocol:@protocol(JavaLangAnnotationAnnotation)]];
}

+ (IOSObjectArray *)__annotations_testApiMisuse5 {
  return [IOSObjectArray arrayWithObjects:(id[]) { [[OrgJunitTest alloc] initWithExpected:[[JavaLangIllegalArgumentException class] getClass] withTimeout:0] } count:1 type:[IOSClass classWithProtocol:@protocol(JavaLangAnnotationAnnotation)]];
}

+ (IOSObjectArray *)__annotations_testApiMisuse6 {
  return [IOSObjectArray arrayWithObjects:(id[]) { [[OrgJunitTest alloc] initWithExpected:[[JavaLangIllegalArgumentException class] getClass] withTimeout:0] } count:1 type:[IOSClass classWithProtocol:@protocol(JavaLangAnnotationAnnotation)]];
}

+ (IOSObjectArray *)__annotations_testApiMisuse7 {
  return [IOSObjectArray arrayWithObjects:(id[]) { [[OrgJunitTest alloc] initWithExpected:[[JavaLangIllegalArgumentException class] getClass] withTimeout:0] } count:1 type:[IOSClass classWithProtocol:@protocol(JavaLangAnnotationAnnotation)]];
}

+ (IOSObjectArray *)__annotations_testApiMisuse8 {
  return [IOSObjectArray arrayWithObjects:(id[]) { [[OrgJunitTest alloc] initWithExpected:[[JavaLangIllegalArgumentException class] getClass] withTimeout:0] } count:1 type:[IOSClass classWithProtocol:@protocol(JavaLangAnnotationAnnotation)]];
}

+ (IOSObjectArray *)__annotations_testApiMisuse9 {
  return [IOSObjectArray arrayWithObjects:(id[]) { [[OrgJunitTest alloc] initWithExpected:[[JavaLangIllegalArgumentException class] getClass] withTimeout:0] } count:1 type:[IOSClass classWithProtocol:@protocol(JavaLangAnnotationAnnotation)]];
}

+ (IOSObjectArray *)__annotations_testApiMisuse10 {
  return [IOSObjectArray arrayWithObjects:(id[]) { [[OrgJunitTest alloc] initWithExpected:[[OrgJunitTest_None class] getClass] withTimeout:0] } count:1 type:[IOSClass classWithProtocol:@protocol(JavaLangAnnotationAnnotation)]];
}

+ (IOSObjectArray *)__annotations_testApiMisuse11 {
  return [IOSObjectArray arrayWithObjects:(id[]) { [[OrgJunitTest alloc] initWithExpected:[[OrgJunitTest_None class] getClass] withTimeout:0] } count:1 type:[IOSClass classWithProtocol:@protocol(JavaLangAnnotationAnnotation)]];
}

+ (IOSObjectArray *)__annotations_testApiMisuse12 {
  return [IOSObjectArray arrayWithObjects:(id[]) { [[OrgJunitTest alloc] initWithExpected:[[OrgJunitTest_None class] getClass] withTimeout:0] } count:1 type:[IOSClass classWithProtocol:@protocol(JavaLangAnnotationAnnotation)]];
}

+ (IOSObjectArray *)__annotations_testApiMisuse13 {
  return [IOSObjectArray arrayWithObjects:(id[]) { [[OrgJunitTest alloc] initWithExpected:[[JavaLangIllegalArgumentException class] getClass] withTimeout:0] } count:1 type:[IOSClass classWithProtocol:@protocol(JavaLangAnnotationAnnotation)]];
}

+ (IOSObjectArray *)__annotations_testApiMisuse15 {
  return [IOSObjectArray arrayWithObjects:(id[]) { [[OrgJunitTest alloc] initWithExpected:[[OrgJunitTest_None class] getClass] withTimeout:0] } count:1 type:[IOSClass classWithProtocol:@protocol(JavaLangAnnotationAnnotation)]];
}

+ (IOSObjectArray *)__annotations_testApiMisuse16 {
  return [IOSObjectArray arrayWithObjects:(id[]) { [[OrgJunitTest alloc] initWithExpected:[[JavaLangIllegalArgumentException class] getClass] withTimeout:0] } count:1 type:[IOSClass classWithProtocol:@protocol(JavaLangAnnotationAnnotation)]];
}

+ (IOSObjectArray *)__annotations_testApiMisuse17 {
  return [IOSObjectArray arrayWithObjects:(id[]) { [[OrgJunitTest alloc] initWithExpected:[[JavaLangIllegalArgumentException class] getClass] withTimeout:0] } count:1 type:[IOSClass classWithProtocol:@protocol(JavaLangAnnotationAnnotation)]];
}

+ (IOSObjectArray *)__annotations_testApiMisuse18 {
  return [IOSObjectArray arrayWithObjects:(id[]) { [[OrgJunitTest alloc] initWithExpected:[[JavaLangIllegalArgumentException class] getClass] withTimeout:0] } count:1 type:[IOSClass classWithProtocol:@protocol(JavaLangAnnotationAnnotation)]];
}

+ (IOSObjectArray *)__annotations_testApiMisuse19 {
  return [IOSObjectArray arrayWithObjects:(id[]) { [[OrgJunitTest alloc] initWithExpected:[[JavaLangIllegalArgumentException class] getClass] withTimeout:0] } count:1 type:[IOSClass classWithProtocol:@protocol(JavaLangAnnotationAnnotation)]];
}

+ (IOSObjectArray *)__annotations_testGetUnit {
  return [IOSObjectArray arrayWithObjects:(id[]) { [[OrgJunitTest alloc] initWithExpected:[[OrgJunitTest_None class] getClass] withTimeout:0] } count:1 type:[IOSClass classWithProtocol:@protocol(JavaLangAnnotationAnnotation)]];
}

+ (IOSObjectArray *)__annotations_testChangeUnit {
  return [IOSObjectArray arrayWithObjects:(id[]) { [[OrgJunitTest alloc] initWithExpected:[[OrgJunitTest_None class] getClass] withTimeout:0] } count:1 type:[IOSClass classWithProtocol:@protocol(JavaLangAnnotationAnnotation)]];
}


+ (J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { "testApiMisuse1", NULL, "V", 0x1, "Ljava.lang.Exception;" },
    { "testApiMisuse2", NULL, "V", 0x1, "Ljava.lang.Exception;" },
    { "testApiMisuse3", NULL, "V", 0x1, "Ljava.lang.Exception;" },
    { "testApiMisuse4", NULL, "V", 0x1, "Ljava.lang.Exception;" },
    { "testApiMisuse5", NULL, "V", 0x1, "Ljava.lang.Exception;" },
    { "testApiMisuse6", NULL, "V", 0x1, "Ljava.lang.Exception;" },
    { "testApiMisuse7", NULL, "V", 0x1, "Ljava.lang.Exception;" },
    { "testApiMisuse8", NULL, "V", 0x1, "Ljava.lang.Exception;" },
    { "testApiMisuse9", NULL, "V", 0x1, "Ljava.lang.Exception;" },
    { "testApiMisuse10", NULL, "V", 0x1, "Ljava.lang.Exception;" },
    { "testApiMisuse11", NULL, "V", 0x1, "Ljava.lang.Exception;" },
    { "testApiMisuse12", NULL, "V", 0x1, "Ljava.lang.Exception;" },
    { "testApiMisuse13", NULL, "V", 0x1, "Ljava.lang.Exception;" },
    { "testApiMisuse15", NULL, "V", 0x1, "Ljava.lang.Exception;" },
    { "testApiMisuse16", NULL, "V", 0x1, "Ljava.lang.Exception;" },
    { "testApiMisuse17", NULL, "V", 0x1, "Ljava.lang.Exception;" },
    { "testApiMisuse18", NULL, "V", 0x1, "Ljava.lang.Exception;" },
    { "testApiMisuse19", NULL, "V", 0x1, "Ljava.lang.Exception;" },
    { "testGetUnit", NULL, "V", 0x1, NULL },
    { "testChangeUnit", NULL, "V", 0x1, NULL },
    { "init", NULL, NULL, 0x1, NULL },
  };
  static J2ObjcFieldInfo fields[] = {
    { "date_", NULL, 0x0, "Ljava.util.Date;", NULL,  },
    { "duration_", NULL, 0x0, "Lorg.ocpsoft.prettytime.Duration;", NULL,  },
    { "list_", NULL, 0x0, "Ljava.util.List;", NULL,  },
    { "t_", NULL, 0x0, "Lorg.ocpsoft.prettytime.PrettyTime;", NULL,  },
  };
  static J2ObjcClassInfo _OrgOcpsoftPrettytimePrettyTimeAPIManipulationTest = { "PrettyTimeAPIManipulationTest", "org.ocpsoft.prettytime", NULL, 0x1, 21, methods, 4, fields, 0, NULL};
  return &_OrgOcpsoftPrettytimePrettyTimeAPIManipulationTest;
}

@end
