//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/andrefonseca/Documents/PodsFolders/prettytime/core/src/main/java/org/ocpsoft/prettytime/format/SimpleTimeFormat.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgOcpsoftPrettytimeFormatSimpleTimeFormat")
#ifdef RESTRICT_OrgOcpsoftPrettytimeFormatSimpleTimeFormat
#define INCLUDE_ALL_OrgOcpsoftPrettytimeFormatSimpleTimeFormat 0
#else
#define INCLUDE_ALL_OrgOcpsoftPrettytimeFormatSimpleTimeFormat 1
#endif
#undef RESTRICT_OrgOcpsoftPrettytimeFormatSimpleTimeFormat

#if !defined (OrgOcpsoftPrettytimeFormatSimpleTimeFormat_) && (INCLUDE_ALL_OrgOcpsoftPrettytimeFormatSimpleTimeFormat || defined(INCLUDE_OrgOcpsoftPrettytimeFormatSimpleTimeFormat))
#define OrgOcpsoftPrettytimeFormatSimpleTimeFormat_

#define RESTRICT_OrgOcpsoftPrettytimeTimeFormat 1
#define INCLUDE_OrgOcpsoftPrettytimeTimeFormat 1
#include "org/ocpsoft/prettytime/TimeFormat.h"

@protocol OrgOcpsoftPrettytimeDuration;

/*!
 @brief Represents a simple method of formatting a specific <code>Duration</code> of time
 @author <a href="mailto:lincolnbaxter@@gmail.com">Lincoln Baxter, III</a>
 */
@interface OrgOcpsoftPrettytimeFormatSimpleTimeFormat : NSObject < OrgOcpsoftPrettytimeTimeFormat >

#pragma mark Public

- (instancetype)init;

- (NSString *)decorateWithOrgOcpsoftPrettytimeDuration:(id<OrgOcpsoftPrettytimeDuration>)duration
                                          withNSString:(NSString *)time;

- (NSString *)decorateUnroundedWithOrgOcpsoftPrettytimeDuration:(id<OrgOcpsoftPrettytimeDuration>)duration
                                                   withNSString:(NSString *)time;

- (NSString *)formatWithOrgOcpsoftPrettytimeDuration:(id<OrgOcpsoftPrettytimeDuration>)duration;

- (NSString *)formatUnroundedWithOrgOcpsoftPrettytimeDuration:(id<OrgOcpsoftPrettytimeDuration>)duration;

- (NSString *)getPattern;

- (OrgOcpsoftPrettytimeFormatSimpleTimeFormat *)setFuturePluralNameWithNSString:(NSString *)futurePluralName;

- (OrgOcpsoftPrettytimeFormatSimpleTimeFormat *)setFuturePrefixWithNSString:(NSString *)futurePrefix;

- (OrgOcpsoftPrettytimeFormatSimpleTimeFormat *)setFutureSingularNameWithNSString:(NSString *)futureSingularName;

- (OrgOcpsoftPrettytimeFormatSimpleTimeFormat *)setFutureSuffixWithNSString:(NSString *)futureSuffix;

- (OrgOcpsoftPrettytimeFormatSimpleTimeFormat *)setPastPluralNameWithNSString:(NSString *)pastPluralName;

- (OrgOcpsoftPrettytimeFormatSimpleTimeFormat *)setPastPrefixWithNSString:(NSString *)pastPrefix;

- (OrgOcpsoftPrettytimeFormatSimpleTimeFormat *)setPastSingularNameWithNSString:(NSString *)pastSingularName;

- (OrgOcpsoftPrettytimeFormatSimpleTimeFormat *)setPastSuffixWithNSString:(NSString *)pastSuffix;

- (OrgOcpsoftPrettytimeFormatSimpleTimeFormat *)setPatternWithNSString:(NSString *)pattern;

- (OrgOcpsoftPrettytimeFormatSimpleTimeFormat *)setPluralNameWithNSString:(NSString *)pluralName;

/*!
 @brief The percentage of the current <code>TimeUnit</code>.getMillisPerUnit() for which the quantity may be rounded up by one.
 @param roundingTolerance
 */
- (OrgOcpsoftPrettytimeFormatSimpleTimeFormat *)setRoundingToleranceWithInt:(jint)roundingTolerance;

- (OrgOcpsoftPrettytimeFormatSimpleTimeFormat *)setSingularNameWithNSString:(NSString *)name;

- (NSString *)description;

#pragma mark Protected

- (NSString *)getGramaticallyCorrectNameWithOrgOcpsoftPrettytimeDuration:(id<OrgOcpsoftPrettytimeDuration>)d
                                                             withBoolean:(jboolean)round;

- (NSString *)getPatternWithLong:(jlong)quantity;

- (jlong)getQuantityWithOrgOcpsoftPrettytimeDuration:(id<OrgOcpsoftPrettytimeDuration>)duration
                                         withBoolean:(jboolean)round;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgOcpsoftPrettytimeFormatSimpleTimeFormat)

inline NSString *OrgOcpsoftPrettytimeFormatSimpleTimeFormat_get_SIGN();
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT NSString *OrgOcpsoftPrettytimeFormatSimpleTimeFormat_SIGN;
J2OBJC_STATIC_FIELD_OBJ_FINAL(OrgOcpsoftPrettytimeFormatSimpleTimeFormat, SIGN, NSString *)

inline NSString *OrgOcpsoftPrettytimeFormatSimpleTimeFormat_get_QUANTITY();
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT NSString *OrgOcpsoftPrettytimeFormatSimpleTimeFormat_QUANTITY;
J2OBJC_STATIC_FIELD_OBJ_FINAL(OrgOcpsoftPrettytimeFormatSimpleTimeFormat, QUANTITY, NSString *)

inline NSString *OrgOcpsoftPrettytimeFormatSimpleTimeFormat_get_UNIT();
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT NSString *OrgOcpsoftPrettytimeFormatSimpleTimeFormat_UNIT;
J2OBJC_STATIC_FIELD_OBJ_FINAL(OrgOcpsoftPrettytimeFormatSimpleTimeFormat, UNIT, NSString *)

FOUNDATION_EXPORT void OrgOcpsoftPrettytimeFormatSimpleTimeFormat_init(OrgOcpsoftPrettytimeFormatSimpleTimeFormat *self);

FOUNDATION_EXPORT OrgOcpsoftPrettytimeFormatSimpleTimeFormat *new_OrgOcpsoftPrettytimeFormatSimpleTimeFormat_init() NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgOcpsoftPrettytimeFormatSimpleTimeFormat *create_OrgOcpsoftPrettytimeFormatSimpleTimeFormat_init();

J2OBJC_TYPE_LITERAL_HEADER(OrgOcpsoftPrettytimeFormatSimpleTimeFormat)

#endif

#pragma pop_macro("INCLUDE_ALL_OrgOcpsoftPrettytimeFormatSimpleTimeFormat")
