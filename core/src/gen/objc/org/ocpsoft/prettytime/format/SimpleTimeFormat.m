//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/andrefonseca/Documents/PodsFolders/prettytime/core/src/main/java/org/ocpsoft/prettytime/format/SimpleTimeFormat.java
//

#include "J2ObjC_source.h"
#include "java/lang/Math.h"
#include "java/lang/StringBuilder.h"
#include "org/ocpsoft/prettytime/Duration.h"
#include "org/ocpsoft/prettytime/format/SimpleTimeFormat.h"

@interface OrgOcpsoftPrettytimeFormatSimpleTimeFormat () {
 @public
  NSString *singularName_;
  NSString *pluralName_;
  NSString *futureSingularName_;
  NSString *futurePluralName_;
  NSString *pastSingularName_;
  NSString *pastPluralName_;
  NSString *pattern_;
  NSString *futurePrefix_;
  NSString *futureSuffix_;
  NSString *pastPrefix_;
  NSString *pastSuffix_;
  jint roundingTolerance_;
}

- (NSString *)formatWithOrgOcpsoftPrettytimeDuration:(id<OrgOcpsoftPrettytimeDuration>)duration
                                         withBoolean:(jboolean)round;

- (NSString *)applyPatternWithNSString:(NSString *)sign
                          withNSString:(NSString *)unit
                              withLong:(jlong)quantity;

- (NSString *)getSignWithOrgOcpsoftPrettytimeDuration:(id<OrgOcpsoftPrettytimeDuration>)d;

- (NSString *)getSingularNameWithOrgOcpsoftPrettytimeDuration:(id<OrgOcpsoftPrettytimeDuration>)duration;

- (NSString *)getPluralNameWithOrgOcpsoftPrettytimeDuration:(id<OrgOcpsoftPrettytimeDuration>)duration;

@end

J2OBJC_FIELD_SETTER(OrgOcpsoftPrettytimeFormatSimpleTimeFormat, singularName_, NSString *)
J2OBJC_FIELD_SETTER(OrgOcpsoftPrettytimeFormatSimpleTimeFormat, pluralName_, NSString *)
J2OBJC_FIELD_SETTER(OrgOcpsoftPrettytimeFormatSimpleTimeFormat, futureSingularName_, NSString *)
J2OBJC_FIELD_SETTER(OrgOcpsoftPrettytimeFormatSimpleTimeFormat, futurePluralName_, NSString *)
J2OBJC_FIELD_SETTER(OrgOcpsoftPrettytimeFormatSimpleTimeFormat, pastSingularName_, NSString *)
J2OBJC_FIELD_SETTER(OrgOcpsoftPrettytimeFormatSimpleTimeFormat, pastPluralName_, NSString *)
J2OBJC_FIELD_SETTER(OrgOcpsoftPrettytimeFormatSimpleTimeFormat, pattern_, NSString *)
J2OBJC_FIELD_SETTER(OrgOcpsoftPrettytimeFormatSimpleTimeFormat, futurePrefix_, NSString *)
J2OBJC_FIELD_SETTER(OrgOcpsoftPrettytimeFormatSimpleTimeFormat, futureSuffix_, NSString *)
J2OBJC_FIELD_SETTER(OrgOcpsoftPrettytimeFormatSimpleTimeFormat, pastPrefix_, NSString *)
J2OBJC_FIELD_SETTER(OrgOcpsoftPrettytimeFormatSimpleTimeFormat, pastSuffix_, NSString *)

inline NSString *OrgOcpsoftPrettytimeFormatSimpleTimeFormat_get_NEGATIVE();
static NSString *OrgOcpsoftPrettytimeFormatSimpleTimeFormat_NEGATIVE = @"-";
J2OBJC_STATIC_FIELD_OBJ_FINAL(OrgOcpsoftPrettytimeFormatSimpleTimeFormat, NEGATIVE, NSString *)

__attribute__((unused)) static NSString *OrgOcpsoftPrettytimeFormatSimpleTimeFormat_formatWithOrgOcpsoftPrettytimeDuration_withBoolean_(OrgOcpsoftPrettytimeFormatSimpleTimeFormat *self, id<OrgOcpsoftPrettytimeDuration> duration, jboolean round);

__attribute__((unused)) static NSString *OrgOcpsoftPrettytimeFormatSimpleTimeFormat_applyPatternWithNSString_withNSString_withLong_(OrgOcpsoftPrettytimeFormatSimpleTimeFormat *self, NSString *sign, NSString *unit, jlong quantity);

__attribute__((unused)) static NSString *OrgOcpsoftPrettytimeFormatSimpleTimeFormat_getSignWithOrgOcpsoftPrettytimeDuration_(OrgOcpsoftPrettytimeFormatSimpleTimeFormat *self, id<OrgOcpsoftPrettytimeDuration> d);

__attribute__((unused)) static NSString *OrgOcpsoftPrettytimeFormatSimpleTimeFormat_getSingularNameWithOrgOcpsoftPrettytimeDuration_(OrgOcpsoftPrettytimeFormatSimpleTimeFormat *self, id<OrgOcpsoftPrettytimeDuration> duration);

__attribute__((unused)) static NSString *OrgOcpsoftPrettytimeFormatSimpleTimeFormat_getPluralNameWithOrgOcpsoftPrettytimeDuration_(OrgOcpsoftPrettytimeFormatSimpleTimeFormat *self, id<OrgOcpsoftPrettytimeDuration> duration);

NSString *OrgOcpsoftPrettytimeFormatSimpleTimeFormat_SIGN = @"%s";
NSString *OrgOcpsoftPrettytimeFormatSimpleTimeFormat_QUANTITY = @"%n";
NSString *OrgOcpsoftPrettytimeFormatSimpleTimeFormat_UNIT = @"%u";

@implementation OrgOcpsoftPrettytimeFormatSimpleTimeFormat

- (NSString *)formatWithOrgOcpsoftPrettytimeDuration:(id<OrgOcpsoftPrettytimeDuration>)duration {
  return OrgOcpsoftPrettytimeFormatSimpleTimeFormat_formatWithOrgOcpsoftPrettytimeDuration_withBoolean_(self, duration, true);
}

- (NSString *)formatUnroundedWithOrgOcpsoftPrettytimeDuration:(id<OrgOcpsoftPrettytimeDuration>)duration {
  return OrgOcpsoftPrettytimeFormatSimpleTimeFormat_formatWithOrgOcpsoftPrettytimeDuration_withBoolean_(self, duration, false);
}

- (NSString *)decorateWithOrgOcpsoftPrettytimeDuration:(id<OrgOcpsoftPrettytimeDuration>)duration
                                          withNSString:(NSString *)time {
  JavaLangStringBuilder *result = [new_JavaLangStringBuilder_init() autorelease];
  if ([((id<OrgOcpsoftPrettytimeDuration>) nil_chk(duration)) isInPast]) {
    [((JavaLangStringBuilder *) nil_chk([((JavaLangStringBuilder *) nil_chk([((JavaLangStringBuilder *) nil_chk([((JavaLangStringBuilder *) nil_chk([result appendWithNSString:pastPrefix_])) appendWithNSString:@" "])) appendWithNSString:time])) appendWithNSString:@" "])) appendWithNSString:pastSuffix_];
  }
  else {
    [((JavaLangStringBuilder *) nil_chk([((JavaLangStringBuilder *) nil_chk([((JavaLangStringBuilder *) nil_chk([((JavaLangStringBuilder *) nil_chk([result appendWithNSString:futurePrefix_])) appendWithNSString:@" "])) appendWithNSString:time])) appendWithNSString:@" "])) appendWithNSString:futureSuffix_];
  }
  return [((NSString *) nil_chk([((NSString *) nil_chk([result description])) replaceAll:@"\\s+" withReplacement:@" "])) trim];
}

- (NSString *)decorateUnroundedWithOrgOcpsoftPrettytimeDuration:(id<OrgOcpsoftPrettytimeDuration>)duration
                                                   withNSString:(NSString *)time {
  return [self decorateWithOrgOcpsoftPrettytimeDuration:duration withNSString:time];
}

- (NSString *)formatWithOrgOcpsoftPrettytimeDuration:(id<OrgOcpsoftPrettytimeDuration>)duration
                                         withBoolean:(jboolean)round {
  return OrgOcpsoftPrettytimeFormatSimpleTimeFormat_formatWithOrgOcpsoftPrettytimeDuration_withBoolean_(self, duration, round);
}

- (NSString *)applyPatternWithNSString:(NSString *)sign
                          withNSString:(NSString *)unit
                              withLong:(jlong)quantity {
  return OrgOcpsoftPrettytimeFormatSimpleTimeFormat_applyPatternWithNSString_withNSString_withLong_(self, sign, unit, quantity);
}

- (NSString *)getPatternWithLong:(jlong)quantity {
  return pattern_;
}

- (NSString *)getPattern {
  return pattern_;
}

- (jlong)getQuantityWithOrgOcpsoftPrettytimeDuration:(id<OrgOcpsoftPrettytimeDuration>)duration
                                         withBoolean:(jboolean)round {
  return JavaLangMath_absWithLong_(round ? [((id<OrgOcpsoftPrettytimeDuration>) nil_chk(duration)) getQuantityRoundedWithInt:roundingTolerance_] : [((id<OrgOcpsoftPrettytimeDuration>) nil_chk(duration)) getQuantity]);
}

- (NSString *)getGramaticallyCorrectNameWithOrgOcpsoftPrettytimeDuration:(id<OrgOcpsoftPrettytimeDuration>)d
                                                             withBoolean:(jboolean)round {
  NSString *result = OrgOcpsoftPrettytimeFormatSimpleTimeFormat_getSingularNameWithOrgOcpsoftPrettytimeDuration_(self, d);
  if ((JavaLangMath_absWithLong_([self getQuantityWithOrgOcpsoftPrettytimeDuration:d withBoolean:round]) == 0) || (JavaLangMath_absWithLong_([self getQuantityWithOrgOcpsoftPrettytimeDuration:d withBoolean:round]) > 1)) {
    result = OrgOcpsoftPrettytimeFormatSimpleTimeFormat_getPluralNameWithOrgOcpsoftPrettytimeDuration_(self, d);
  }
  return result;
}

- (NSString *)getSignWithOrgOcpsoftPrettytimeDuration:(id<OrgOcpsoftPrettytimeDuration>)d {
  return OrgOcpsoftPrettytimeFormatSimpleTimeFormat_getSignWithOrgOcpsoftPrettytimeDuration_(self, d);
}

- (NSString *)getSingularNameWithOrgOcpsoftPrettytimeDuration:(id<OrgOcpsoftPrettytimeDuration>)duration {
  return OrgOcpsoftPrettytimeFormatSimpleTimeFormat_getSingularNameWithOrgOcpsoftPrettytimeDuration_(self, duration);
}

- (NSString *)getPluralNameWithOrgOcpsoftPrettytimeDuration:(id<OrgOcpsoftPrettytimeDuration>)duration {
  return OrgOcpsoftPrettytimeFormatSimpleTimeFormat_getPluralNameWithOrgOcpsoftPrettytimeDuration_(self, duration);
}

- (OrgOcpsoftPrettytimeFormatSimpleTimeFormat *)setPatternWithNSString:(NSString *)pattern {
  JreStrongAssign(&self->pattern_, pattern);
  return self;
}

- (OrgOcpsoftPrettytimeFormatSimpleTimeFormat *)setFuturePrefixWithNSString:(NSString *)futurePrefix {
  JreStrongAssign(&self->futurePrefix_, [((NSString *) nil_chk(futurePrefix)) trim]);
  return self;
}

- (OrgOcpsoftPrettytimeFormatSimpleTimeFormat *)setFutureSuffixWithNSString:(NSString *)futureSuffix {
  JreStrongAssign(&self->futureSuffix_, [((NSString *) nil_chk(futureSuffix)) trim]);
  return self;
}

- (OrgOcpsoftPrettytimeFormatSimpleTimeFormat *)setPastPrefixWithNSString:(NSString *)pastPrefix {
  JreStrongAssign(&self->pastPrefix_, [((NSString *) nil_chk(pastPrefix)) trim]);
  return self;
}

- (OrgOcpsoftPrettytimeFormatSimpleTimeFormat *)setPastSuffixWithNSString:(NSString *)pastSuffix {
  JreStrongAssign(&self->pastSuffix_, [((NSString *) nil_chk(pastSuffix)) trim]);
  return self;
}

- (OrgOcpsoftPrettytimeFormatSimpleTimeFormat *)setRoundingToleranceWithInt:(jint)roundingTolerance {
  self->roundingTolerance_ = roundingTolerance;
  return self;
}

- (OrgOcpsoftPrettytimeFormatSimpleTimeFormat *)setSingularNameWithNSString:(NSString *)name {
  JreStrongAssign(&self->singularName_, name);
  return self;
}

- (OrgOcpsoftPrettytimeFormatSimpleTimeFormat *)setPluralNameWithNSString:(NSString *)pluralName {
  JreStrongAssign(&self->pluralName_, pluralName);
  return self;
}

- (OrgOcpsoftPrettytimeFormatSimpleTimeFormat *)setFutureSingularNameWithNSString:(NSString *)futureSingularName {
  JreStrongAssign(&self->futureSingularName_, futureSingularName);
  return self;
}

- (OrgOcpsoftPrettytimeFormatSimpleTimeFormat *)setFuturePluralNameWithNSString:(NSString *)futurePluralName {
  JreStrongAssign(&self->futurePluralName_, futurePluralName);
  return self;
}

- (OrgOcpsoftPrettytimeFormatSimpleTimeFormat *)setPastSingularNameWithNSString:(NSString *)pastSingularName {
  JreStrongAssign(&self->pastSingularName_, pastSingularName);
  return self;
}

- (OrgOcpsoftPrettytimeFormatSimpleTimeFormat *)setPastPluralNameWithNSString:(NSString *)pastPluralName {
  JreStrongAssign(&self->pastPluralName_, pastPluralName);
  return self;
}

- (NSString *)description {
  return JreStrcat("$$$$$$$$$$$IC", @"SimpleTimeFormat [pattern=", pattern_, @", futurePrefix=", futurePrefix_, @", futureSuffix=", futureSuffix_, @", pastPrefix=", pastPrefix_, @", pastSuffix=", pastSuffix_, @", roundingTolerance=", roundingTolerance_, ']');
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  OrgOcpsoftPrettytimeFormatSimpleTimeFormat_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (void)dealloc {
  RELEASE_(singularName_);
  RELEASE_(pluralName_);
  RELEASE_(futureSingularName_);
  RELEASE_(futurePluralName_);
  RELEASE_(pastSingularName_);
  RELEASE_(pastPluralName_);
  RELEASE_(pattern_);
  RELEASE_(futurePrefix_);
  RELEASE_(futureSuffix_);
  RELEASE_(pastPrefix_);
  RELEASE_(pastSuffix_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "formatWithOrgOcpsoftPrettytimeDuration:", "format", "Ljava.lang.String;", 0x1, NULL, NULL },
    { "formatUnroundedWithOrgOcpsoftPrettytimeDuration:", "formatUnrounded", "Ljava.lang.String;", 0x1, NULL, NULL },
    { "decorateWithOrgOcpsoftPrettytimeDuration:withNSString:", "decorate", "Ljava.lang.String;", 0x1, NULL, NULL },
    { "decorateUnroundedWithOrgOcpsoftPrettytimeDuration:withNSString:", "decorateUnrounded", "Ljava.lang.String;", 0x1, NULL, NULL },
    { "formatWithOrgOcpsoftPrettytimeDuration:withBoolean:", "format", "Ljava.lang.String;", 0x2, NULL, NULL },
    { "applyPatternWithNSString:withNSString:withLong:", "applyPattern", "Ljava.lang.String;", 0x2, NULL, NULL },
    { "getPatternWithLong:", "getPattern", "Ljava.lang.String;", 0x4, NULL, NULL },
    { "getPattern", NULL, "Ljava.lang.String;", 0x1, NULL, NULL },
    { "getQuantityWithOrgOcpsoftPrettytimeDuration:withBoolean:", "getQuantity", "J", 0x4, NULL, NULL },
    { "getGramaticallyCorrectNameWithOrgOcpsoftPrettytimeDuration:withBoolean:", "getGramaticallyCorrectName", "Ljava.lang.String;", 0x4, NULL, NULL },
    { "getSignWithOrgOcpsoftPrettytimeDuration:", "getSign", "Ljava.lang.String;", 0x2, NULL, NULL },
    { "getSingularNameWithOrgOcpsoftPrettytimeDuration:", "getSingularName", "Ljava.lang.String;", 0x2, NULL, NULL },
    { "getPluralNameWithOrgOcpsoftPrettytimeDuration:", "getPluralName", "Ljava.lang.String;", 0x2, NULL, NULL },
    { "setPatternWithNSString:", "setPattern", "Lorg.ocpsoft.prettytime.format.SimpleTimeFormat;", 0x1, NULL, NULL },
    { "setFuturePrefixWithNSString:", "setFuturePrefix", "Lorg.ocpsoft.prettytime.format.SimpleTimeFormat;", 0x1, NULL, NULL },
    { "setFutureSuffixWithNSString:", "setFutureSuffix", "Lorg.ocpsoft.prettytime.format.SimpleTimeFormat;", 0x1, NULL, NULL },
    { "setPastPrefixWithNSString:", "setPastPrefix", "Lorg.ocpsoft.prettytime.format.SimpleTimeFormat;", 0x1, NULL, NULL },
    { "setPastSuffixWithNSString:", "setPastSuffix", "Lorg.ocpsoft.prettytime.format.SimpleTimeFormat;", 0x1, NULL, NULL },
    { "setRoundingToleranceWithInt:", "setRoundingTolerance", "Lorg.ocpsoft.prettytime.format.SimpleTimeFormat;", 0x1, NULL, NULL },
    { "setSingularNameWithNSString:", "setSingularName", "Lorg.ocpsoft.prettytime.format.SimpleTimeFormat;", 0x1, NULL, NULL },
    { "setPluralNameWithNSString:", "setPluralName", "Lorg.ocpsoft.prettytime.format.SimpleTimeFormat;", 0x1, NULL, NULL },
    { "setFutureSingularNameWithNSString:", "setFutureSingularName", "Lorg.ocpsoft.prettytime.format.SimpleTimeFormat;", 0x1, NULL, NULL },
    { "setFuturePluralNameWithNSString:", "setFuturePluralName", "Lorg.ocpsoft.prettytime.format.SimpleTimeFormat;", 0x1, NULL, NULL },
    { "setPastSingularNameWithNSString:", "setPastSingularName", "Lorg.ocpsoft.prettytime.format.SimpleTimeFormat;", 0x1, NULL, NULL },
    { "setPastPluralNameWithNSString:", "setPastPluralName", "Lorg.ocpsoft.prettytime.format.SimpleTimeFormat;", 0x1, NULL, NULL },
    { "description", "toString", "Ljava.lang.String;", 0x1, NULL, NULL },
    { "init", NULL, NULL, 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "NEGATIVE", "NEGATIVE", 0x1a, "Ljava.lang.String;", &OrgOcpsoftPrettytimeFormatSimpleTimeFormat_NEGATIVE, NULL, .constantValue.asLong = 0 },
    { "SIGN", "SIGN", 0x19, "Ljava.lang.String;", &OrgOcpsoftPrettytimeFormatSimpleTimeFormat_SIGN, NULL, .constantValue.asLong = 0 },
    { "QUANTITY", "QUANTITY", 0x19, "Ljava.lang.String;", &OrgOcpsoftPrettytimeFormatSimpleTimeFormat_QUANTITY, NULL, .constantValue.asLong = 0 },
    { "UNIT", "UNIT", 0x19, "Ljava.lang.String;", &OrgOcpsoftPrettytimeFormatSimpleTimeFormat_UNIT, NULL, .constantValue.asLong = 0 },
    { "singularName_", NULL, 0x2, "Ljava.lang.String;", NULL, NULL, .constantValue.asLong = 0 },
    { "pluralName_", NULL, 0x2, "Ljava.lang.String;", NULL, NULL, .constantValue.asLong = 0 },
    { "futureSingularName_", NULL, 0x2, "Ljava.lang.String;", NULL, NULL, .constantValue.asLong = 0 },
    { "futurePluralName_", NULL, 0x2, "Ljava.lang.String;", NULL, NULL, .constantValue.asLong = 0 },
    { "pastSingularName_", NULL, 0x2, "Ljava.lang.String;", NULL, NULL, .constantValue.asLong = 0 },
    { "pastPluralName_", NULL, 0x2, "Ljava.lang.String;", NULL, NULL, .constantValue.asLong = 0 },
    { "pattern_", NULL, 0x2, "Ljava.lang.String;", NULL, NULL, .constantValue.asLong = 0 },
    { "futurePrefix_", NULL, 0x2, "Ljava.lang.String;", NULL, NULL, .constantValue.asLong = 0 },
    { "futureSuffix_", NULL, 0x2, "Ljava.lang.String;", NULL, NULL, .constantValue.asLong = 0 },
    { "pastPrefix_", NULL, 0x2, "Ljava.lang.String;", NULL, NULL, .constantValue.asLong = 0 },
    { "pastSuffix_", NULL, 0x2, "Ljava.lang.String;", NULL, NULL, .constantValue.asLong = 0 },
    { "roundingTolerance_", NULL, 0x2, "I", NULL, NULL, .constantValue.asLong = 0 },
  };
  static const J2ObjcClassInfo _OrgOcpsoftPrettytimeFormatSimpleTimeFormat = { 2, "SimpleTimeFormat", "org.ocpsoft.prettytime.format", NULL, 0x1, 27, methods, 16, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_OrgOcpsoftPrettytimeFormatSimpleTimeFormat;
}

@end

NSString *OrgOcpsoftPrettytimeFormatSimpleTimeFormat_formatWithOrgOcpsoftPrettytimeDuration_withBoolean_(OrgOcpsoftPrettytimeFormatSimpleTimeFormat *self, id<OrgOcpsoftPrettytimeDuration> duration, jboolean round) {
  NSString *sign = OrgOcpsoftPrettytimeFormatSimpleTimeFormat_getSignWithOrgOcpsoftPrettytimeDuration_(self, duration);
  NSString *unit = [self getGramaticallyCorrectNameWithOrgOcpsoftPrettytimeDuration:duration withBoolean:round];
  jlong quantity = [self getQuantityWithOrgOcpsoftPrettytimeDuration:duration withBoolean:round];
  return OrgOcpsoftPrettytimeFormatSimpleTimeFormat_applyPatternWithNSString_withNSString_withLong_(self, sign, unit, quantity);
}

NSString *OrgOcpsoftPrettytimeFormatSimpleTimeFormat_applyPatternWithNSString_withNSString_withLong_(OrgOcpsoftPrettytimeFormatSimpleTimeFormat *self, NSString *sign, NSString *unit, jlong quantity) {
  NSString *result = [((NSString *) nil_chk([self getPatternWithLong:quantity])) replaceAll:OrgOcpsoftPrettytimeFormatSimpleTimeFormat_SIGN withReplacement:sign];
  result = [((NSString *) nil_chk(result)) replaceAll:OrgOcpsoftPrettytimeFormatSimpleTimeFormat_QUANTITY withReplacement:NSString_valueOfLong_(quantity)];
  result = [((NSString *) nil_chk(result)) replaceAll:OrgOcpsoftPrettytimeFormatSimpleTimeFormat_UNIT withReplacement:unit];
  return result;
}

NSString *OrgOcpsoftPrettytimeFormatSimpleTimeFormat_getSignWithOrgOcpsoftPrettytimeDuration_(OrgOcpsoftPrettytimeFormatSimpleTimeFormat *self, id<OrgOcpsoftPrettytimeDuration> d) {
  if ([((id<OrgOcpsoftPrettytimeDuration>) nil_chk(d)) getQuantity] < 0) {
    return OrgOcpsoftPrettytimeFormatSimpleTimeFormat_NEGATIVE;
  }
  return @"";
}

NSString *OrgOcpsoftPrettytimeFormatSimpleTimeFormat_getSingularNameWithOrgOcpsoftPrettytimeDuration_(OrgOcpsoftPrettytimeFormatSimpleTimeFormat *self, id<OrgOcpsoftPrettytimeDuration> duration) {
  if ([((id<OrgOcpsoftPrettytimeDuration>) nil_chk(duration)) isInFuture] && self->futureSingularName_ != nil && ((jint) [self->futureSingularName_ length]) > 0) return self->futureSingularName_;
  else if ([duration isInPast] && self->pastSingularName_ != nil && ((jint) [self->pastSingularName_ length]) > 0) return self->pastSingularName_;
  else return self->singularName_;
}

NSString *OrgOcpsoftPrettytimeFormatSimpleTimeFormat_getPluralNameWithOrgOcpsoftPrettytimeDuration_(OrgOcpsoftPrettytimeFormatSimpleTimeFormat *self, id<OrgOcpsoftPrettytimeDuration> duration) {
  if ([((id<OrgOcpsoftPrettytimeDuration>) nil_chk(duration)) isInFuture] && self->futurePluralName_ != nil && ((jint) [((NSString *) nil_chk(self->futureSingularName_)) length]) > 0) return self->futurePluralName_;
  else if ([duration isInPast] && self->pastPluralName_ != nil && ((jint) [((NSString *) nil_chk(self->pastSingularName_)) length]) > 0) return self->pastPluralName_;
  else return self->pluralName_;
}

void OrgOcpsoftPrettytimeFormatSimpleTimeFormat_init(OrgOcpsoftPrettytimeFormatSimpleTimeFormat *self) {
  NSObject_init(self);
  JreStrongAssign(&self->singularName_, @"");
  JreStrongAssign(&self->pluralName_, @"");
  JreStrongAssign(&self->futureSingularName_, @"");
  JreStrongAssign(&self->futurePluralName_, @"");
  JreStrongAssign(&self->pastSingularName_, @"");
  JreStrongAssign(&self->pastPluralName_, @"");
  JreStrongAssign(&self->pattern_, @"");
  JreStrongAssign(&self->futurePrefix_, @"");
  JreStrongAssign(&self->futureSuffix_, @"");
  JreStrongAssign(&self->pastPrefix_, @"");
  JreStrongAssign(&self->pastSuffix_, @"");
  self->roundingTolerance_ = 50;
}

OrgOcpsoftPrettytimeFormatSimpleTimeFormat *new_OrgOcpsoftPrettytimeFormatSimpleTimeFormat_init() {
  OrgOcpsoftPrettytimeFormatSimpleTimeFormat *self = [OrgOcpsoftPrettytimeFormatSimpleTimeFormat alloc];
  OrgOcpsoftPrettytimeFormatSimpleTimeFormat_init(self);
  return self;
}

OrgOcpsoftPrettytimeFormatSimpleTimeFormat *create_OrgOcpsoftPrettytimeFormatSimpleTimeFormat_init() {
  OrgOcpsoftPrettytimeFormatSimpleTimeFormat *self = [[OrgOcpsoftPrettytimeFormatSimpleTimeFormat alloc] autorelease];
  OrgOcpsoftPrettytimeFormatSimpleTimeFormat_init(self);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgOcpsoftPrettytimeFormatSimpleTimeFormat)
