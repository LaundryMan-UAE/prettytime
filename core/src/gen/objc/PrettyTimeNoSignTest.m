//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/marcussmith/HambroPerks/myforks/prettytime/core/src/test/java/org/ocpsoft/prettytime/PrettyTimeNoSignTest.java
//

#include "IOSClass.h"
#include "PrettyTime.h"
#include "PrettyTimeNoSignTest.h"
#include "SimpleTimeFormat.h"
#include "TimeFormat.h"
#include "TimeUnit.h"
#include "java/lang/Exception.h"
#include "java/text/SimpleDateFormat.h"
#include "java/util/Date.h"
#include "java/util/List.h"
#include "java/util/Locale.h"
#include "org/junit/Assert.h"
#include "org/junit/Test.h"

@implementation OrgOcpsoftPrettytimePrettyTimeNoSignTest

- (void)testNoSuffixes {
  JavaUtilDate *then = [((JavaTextSimpleDateFormat *) nil_chk(format_)) parseWithNSString:@"8/20/2009"];
  JavaUtilDate *ref = [format_ parseWithNSString:@"5/17/2009"];
  OrgOcpsoftPrettytimePrettyTime *p = [[OrgOcpsoftPrettytimePrettyTime alloc] initWithJavaUtilDate:ref withJavaUtilLocale:JavaUtilLocale_get_ENGLISH_()];
  id<JavaUtilList> units = [p getUnits];
  for (id<OrgOcpsoftPrettytimeTimeUnit> __strong unit in nil_chk(units)) {
    id<OrgOcpsoftPrettytimeTimeFormat> fmt = [p getFormatWithOrgOcpsoftPrettytimeTimeUnit:unit];
    if ([(id) fmt isKindOfClass:[OrgOcpsoftPrettytimeFormatSimpleTimeFormat class]]) {
      (void) [((OrgOcpsoftPrettytimeFormatSimpleTimeFormat *) nil_chk([((OrgOcpsoftPrettytimeFormatSimpleTimeFormat *) nil_chk([((OrgOcpsoftPrettytimeFormatSimpleTimeFormat *) nil_chk([((OrgOcpsoftPrettytimeFormatSimpleTimeFormat *) nil_chk(((OrgOcpsoftPrettytimeFormatSimpleTimeFormat *) check_class_cast(fmt, [OrgOcpsoftPrettytimeFormatSimpleTimeFormat class])))) setFuturePrefixWithNSString:@""])) setFutureSuffixWithNSString:@""])) setPastPrefixWithNSString:@""])) setPastSuffixWithNSString:@""];
    }
  }
  [OrgJunitAssert assertEqualsWithId:@"3 months" withId:[p formatWithJavaUtilDate:then]];
}

- (instancetype)init {
  if (self = [super init]) {
    format_ = [[JavaTextSimpleDateFormat alloc] initWithNSString:@"MM/dd/yyyy"];
  }
  return self;
}

- (void)copyAllFieldsTo:(OrgOcpsoftPrettytimePrettyTimeNoSignTest *)other {
  [super copyAllFieldsTo:other];
  other->format_ = format_;
}
+ (IOSObjectArray *)__annotations_testNoSuffixes {
  return [IOSObjectArray arrayWithObjects:(id[]) { [[OrgJunitTest alloc] initWithExpected:[[OrgJunitTest_None class] getClass] withTimeout:0] } count:1 type:[IOSClass classWithProtocol:@protocol(JavaLangAnnotationAnnotation)]];
}


+ (J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { "testNoSuffixes", NULL, "V", 0x1, "Ljava.lang.Exception;" },
    { "init", NULL, NULL, 0x1, NULL },
  };
  static J2ObjcFieldInfo fields[] = {
    { "format_", NULL, 0x0, "Ljava.text.SimpleDateFormat;", NULL,  },
  };
  static J2ObjcClassInfo _OrgOcpsoftPrettytimePrettyTimeNoSignTest = { "PrettyTimeNoSignTest", "org.ocpsoft.prettytime", NULL, 0x1, 2, methods, 1, fields, 0, NULL};
  return &_OrgOcpsoftPrettytimePrettyTimeNoSignTest;
}

@end
