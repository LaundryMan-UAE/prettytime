//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/nbransby/Documents/prettytime/core/src/main/java/org/ocpsoft/prettytime/format/SimpleTimeFormat.java
//

#ifndef _OrgOcpsoftPrettytimeFormatSimpleTimeFormat_H_
#define _OrgOcpsoftPrettytimeFormatSimpleTimeFormat_H_

@protocol OrgOcpsoftPrettytimeDuration;

#import "JreEmulation.h"
#include "TimeFormat.h"

/**
 @brief Represents a simple method of formatting a specific Duration of time
 @author <a href="mailto:lincolnbaxter@@gmail.com">Lincoln Baxter, III</a>
 */
@interface OrgOcpsoftPrettytimeFormatSimpleTimeFormat : NSObject < OrgOcpsoftPrettytimeTimeFormat > {
 @public
  NSString *singularName_;
  NSString *pluralName_;
  NSString *futureSingularName_;
  NSString *futurePluralName_;
  NSString *pastSingularName_;
  NSString *pastPluralName_;
  NSString *pattern_;
  NSString *futurePrefix_;
  NSString *futureSuffix_;
  NSString *pastPrefix_;
  NSString *pastSuffix_;
  jint roundingTolerance_;
}

- (NSString *)formatWithOrgOcpsoftPrettytimeDuration:(id<OrgOcpsoftPrettytimeDuration>)duration;

- (NSString *)formatUnroundedWithOrgOcpsoftPrettytimeDuration:(id<OrgOcpsoftPrettytimeDuration>)duration;

- (NSString *)decorateWithOrgOcpsoftPrettytimeDuration:(id<OrgOcpsoftPrettytimeDuration>)duration
                                          withNSString:(NSString *)time;

- (NSString *)decorateUnroundedWithOrgOcpsoftPrettytimeDuration:(id<OrgOcpsoftPrettytimeDuration>)duration
                                                   withNSString:(NSString *)time;

- (NSString *)formatWithOrgOcpsoftPrettytimeDuration:(id<OrgOcpsoftPrettytimeDuration>)duration
                                         withBoolean:(jboolean)round;

- (NSString *)applyPatternWithNSString:(NSString *)sign
                          withNSString:(NSString *)unit
                              withLong:(jlong)quantity;

- (NSString *)getPatternWithLong:(jlong)quantity;

- (NSString *)getPattern;

- (jlong)getQuantityWithOrgOcpsoftPrettytimeDuration:(id<OrgOcpsoftPrettytimeDuration>)duration
                                         withBoolean:(jboolean)round;

- (NSString *)getGramaticallyCorrectNameWithOrgOcpsoftPrettytimeDuration:(id<OrgOcpsoftPrettytimeDuration>)d
                                                             withBoolean:(jboolean)round;

- (NSString *)getSignWithOrgOcpsoftPrettytimeDuration:(id<OrgOcpsoftPrettytimeDuration>)d;

- (NSString *)getSingularNameWithOrgOcpsoftPrettytimeDuration:(id<OrgOcpsoftPrettytimeDuration>)duration;

- (NSString *)getPluralNameWithOrgOcpsoftPrettytimeDuration:(id<OrgOcpsoftPrettytimeDuration>)duration;

- (OrgOcpsoftPrettytimeFormatSimpleTimeFormat *)setPatternWithNSString:(NSString *)pattern;

- (OrgOcpsoftPrettytimeFormatSimpleTimeFormat *)setFuturePrefixWithNSString:(NSString *)futurePrefix;

- (OrgOcpsoftPrettytimeFormatSimpleTimeFormat *)setFutureSuffixWithNSString:(NSString *)futureSuffix;

- (OrgOcpsoftPrettytimeFormatSimpleTimeFormat *)setPastPrefixWithNSString:(NSString *)pastPrefix;

- (OrgOcpsoftPrettytimeFormatSimpleTimeFormat *)setPastSuffixWithNSString:(NSString *)pastSuffix;

/**
 @brief The percentage of the current TimeUnit .getMillisPerUnit() for which the quantity may be rounded up by one.
 @param roundingTolerance
 @return 
 */
- (OrgOcpsoftPrettytimeFormatSimpleTimeFormat *)setRoundingToleranceWithInt:(jint)roundingTolerance;

- (OrgOcpsoftPrettytimeFormatSimpleTimeFormat *)setSingularNameWithNSString:(NSString *)name;

- (OrgOcpsoftPrettytimeFormatSimpleTimeFormat *)setPluralNameWithNSString:(NSString *)pluralName;

- (OrgOcpsoftPrettytimeFormatSimpleTimeFormat *)setFutureSingularNameWithNSString:(NSString *)futureSingularName;

- (OrgOcpsoftPrettytimeFormatSimpleTimeFormat *)setFuturePluralNameWithNSString:(NSString *)futurePluralName;

- (OrgOcpsoftPrettytimeFormatSimpleTimeFormat *)setPastSingularNameWithNSString:(NSString *)pastSingularName;

- (OrgOcpsoftPrettytimeFormatSimpleTimeFormat *)setPastPluralNameWithNSString:(NSString *)pastPluralName;

- (NSString *)description;

- (instancetype)init;

- (void)copyAllFieldsTo:(OrgOcpsoftPrettytimeFormatSimpleTimeFormat *)other;

@end

__attribute__((always_inline)) inline void OrgOcpsoftPrettytimeFormatSimpleTimeFormat_init() {}

J2OBJC_FIELD_SETTER(OrgOcpsoftPrettytimeFormatSimpleTimeFormat, singularName_, NSString *)
J2OBJC_FIELD_SETTER(OrgOcpsoftPrettytimeFormatSimpleTimeFormat, pluralName_, NSString *)
J2OBJC_FIELD_SETTER(OrgOcpsoftPrettytimeFormatSimpleTimeFormat, futureSingularName_, NSString *)
J2OBJC_FIELD_SETTER(OrgOcpsoftPrettytimeFormatSimpleTimeFormat, futurePluralName_, NSString *)
J2OBJC_FIELD_SETTER(OrgOcpsoftPrettytimeFormatSimpleTimeFormat, pastSingularName_, NSString *)
J2OBJC_FIELD_SETTER(OrgOcpsoftPrettytimeFormatSimpleTimeFormat, pastPluralName_, NSString *)
J2OBJC_FIELD_SETTER(OrgOcpsoftPrettytimeFormatSimpleTimeFormat, pattern_, NSString *)
J2OBJC_FIELD_SETTER(OrgOcpsoftPrettytimeFormatSimpleTimeFormat, futurePrefix_, NSString *)
J2OBJC_FIELD_SETTER(OrgOcpsoftPrettytimeFormatSimpleTimeFormat, futureSuffix_, NSString *)
J2OBJC_FIELD_SETTER(OrgOcpsoftPrettytimeFormatSimpleTimeFormat, pastPrefix_, NSString *)
J2OBJC_FIELD_SETTER(OrgOcpsoftPrettytimeFormatSimpleTimeFormat, pastSuffix_, NSString *)

FOUNDATION_EXPORT NSString *OrgOcpsoftPrettytimeFormatSimpleTimeFormat_NEGATIVE_;
J2OBJC_STATIC_FIELD_GETTER(OrgOcpsoftPrettytimeFormatSimpleTimeFormat, NEGATIVE_, NSString *)

FOUNDATION_EXPORT NSString *OrgOcpsoftPrettytimeFormatSimpleTimeFormat_SIGN_;
J2OBJC_STATIC_FIELD_GETTER(OrgOcpsoftPrettytimeFormatSimpleTimeFormat, SIGN_, NSString *)

FOUNDATION_EXPORT NSString *OrgOcpsoftPrettytimeFormatSimpleTimeFormat_QUANTITY_;
J2OBJC_STATIC_FIELD_GETTER(OrgOcpsoftPrettytimeFormatSimpleTimeFormat, QUANTITY_, NSString *)

FOUNDATION_EXPORT NSString *OrgOcpsoftPrettytimeFormatSimpleTimeFormat_UNIT_;
J2OBJC_STATIC_FIELD_GETTER(OrgOcpsoftPrettytimeFormatSimpleTimeFormat, UNIT_, NSString *)

#endif // _OrgOcpsoftPrettytimeFormatSimpleTimeFormat_H_
