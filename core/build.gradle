/*
 * This build file was auto generated by running the Gradle 'init' task
 * by 'marcussmith' at '01/09/14 16:57' with Gradle 2.0
 *
 * This generated file contains a commented-out sample Java project to get you started.
 * For more details take a look at the Java Quickstart chapter in the Gradle
 * user guide available at http://gradle.org/docs/2.0/userguide/tutorial_java_projects.html
 */
// Apply the java plugin to add support for Java
apply plugin: 'java'

// In this section you declare where to find the dependencies of your project
repositories {
    // Use 'maven central' for resolving your dependencies.
    // You can declare any Maven/Ivy/file repository here.
    mavenCentral()
}

// In this section you declare the dependencies for your production and test code
dependencies {
    testCompile "junit:junit:4.11"
}

task translateJava(type:Exec) {
    inputs.files sourceSets.main.allJava
    outputs.files files((sourceSets.main.allJava).collect { i ->
        i.collect { j ->
            def name = projectDir.path + '/src/gen/objc/' + i.name
            //def name = j.path.replace(i.srcDirs.iterator().next().path, 'src/gen/objc')
            return [name.replace('.java', '.h'), name.replace('.java', '.m')]
        }
    }.flatten())


    // the classpath is built from the runtime dependencies for the sourcesets ...
    executable "${J2OBJC_HOME}/j2objc"
    args '--doc-comments'
    args '--nullability'
//    args '--strip-reflection'
    args '-d', file('src/gen/objc').path
    args '-sourcepath', (sourceSets.main.allJava.srcDirs).join(':')
    args '-classpath', sourceSets.main.runtimeClasspath.collect { it.absolutePath }.join(':')
    args inputs.files
}


